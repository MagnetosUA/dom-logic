<?php

namespace MagnetosCompany\MainBundle\Repository;

/**
 * DeviceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DeviceRepository extends \Doctrine\ORM\EntityRepository
{
    public function findDevices()
    {
        $query = $this->createQueryBuilder('d')
            ->select('d.personalId')
            ->where('d.type = :type')
            ->setParameter('type', 'Sensor')
            ->getQuery();

        return $query;
    }

    public function findPersonalIdByName($name)
    {
        $query = $this->createQueryBuilder('d')
            ->select('d.personalId')
            ->where('d.name = :name')
            ->setParameter('name', $name)
            ->getQuery();

        return $query;
    }

    public function findByName($name)
    {
        $query = $this->createQueryBuilder('d')
            ->select('d.id')
            ->where('d.name = :name')
            ->setParameter('name', $name)
            ->getQuery();

        return $query;
    }

    public function findByType($type)
    {
        $query = $this->createQueryBuilder('d')
            ->select('d.personalId')
            ->where('d.type = :type', 'd.status = :status')
            ->setParameter('type', $type)
            ->setParameter('status', 0)
            ->getQuery();

        return $query;
    }

    public function findByPersonalId($personalId)
    {
        $query = $this->createQueryBuilder('d')
            ->select('d.status')
            ->where('d.personalId = :personaId')
            ->setParameter('personaId', $personalId)
            ->setMaxResults(1)
            ->getQuery();

        return $query;
    }

    public function findSensors()
    {
        $query = $this->createQueryBuilder('d')
            ->where('d.type = :type and d.interface = :interface')
            ->setParameters([
                'type' => 'Sensor',
                'interface' => '1-Wire',
            ])
            ->getQuery();

        return $query;
    }

    public function findActivators()
    {
        $query = $this->createQueryBuilder('d')
            ->where('d.type = :type and d.interface = :interface')
            ->setParameters([
                'type' => 'Activator',
                'interface' => '1-Wire',
            ])
            ->getQuery();

        return $query;
    }

    public function findOnewires()
    {
        $query = $this->createQueryBuilder('d')
            ->select('d.name')
            ->where('d.interface = :interface')
            ->setParameters([
                'interface' => '1-Wire',
            ])
            ->getQuery();

        return $query;
    }
}
